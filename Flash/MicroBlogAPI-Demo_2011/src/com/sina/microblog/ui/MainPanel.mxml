<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
	xmlns:mainPanel="com.sina.microblog.ui.mainPanel.*" 
	xmlns:utils="com.sina.microblog.ui.utils.*"
	xmlns:comps="com.sina.microblog.ui.components.*"
	creationComplete="onCreationComplete()" 
	borderVisible="false"
	borderColor="#FFFFFF"
	borderStyle="solid"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	xmlns:s="library://ns.adobe.com/flex/spark">
	<mx:Script>
		<![CDATA[
			import com.sina.microblog.core.ClientEvent;
			import com.sina.microblog.core.MainController;
			import com.sina.microblog.data.MicroBlogStatus;
			import com.sina.microblog.data.MicroBlogUser;
			import com.sina.microblog.ui.components.StatusItemRenderer;
			import com.sina.microblog.ui.mainPanel.DirectMsgPanel;
			import com.sina.microblog.ui.mainPanel.RepostPanel;
			import com.sina.microblog.ui.utils.Comment;
			import com.sina.microblog.ui.utils.DirectMsg;
			import com.sina.microblog.ui.utils.Follower;
			import com.sina.microblog.ui.utils.Friend;
			import com.sina.microblog.ui.utils.Status;
			
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			private const FriendFactory:ClassFactory = new ClassFactory(Friend);
			private const FollowerFactory:ClassFactory = new ClassFactory(Follower);		
			private const StatusFactory:ClassFactory = new ClassFactory(Status);
			private const CommentFactory:ClassFactory = new ClassFactory(Comment);
			private const DirectMsgFactory:ClassFactory = new ClassFactory(DirectMsg);
			
			private var repostPanel:RepostPanel = new RepostPanel();
			private var directMsgPanel:DirectMsgPanel = new DirectMsgPanel();
			[Bindable]
			private var _controller:MainController;
			
			override protected function initializationComplete():void
			{
				super.initializationComplete();
				
				addEventListener(ClientEvent.JUMPTO_HOME, 			jumpToHomePage);
				addEventListener(ClientEvent.JUMPTO_FRIENDS, 		jumpToFriendsPage);
				addEventListener(ClientEvent.JUMPTO_FANS, 			jumpToFansPage);
				addEventListener(ClientEvent.JUMPTO_STATUS,			jumpToStatusPage);
				addEventListener(ClientEvent.JUMPTO_RECEIVED_MSGS, 	jumpToReceiveMsgsPage);
				addEventListener(ClientEvent.JUMPTO_SENT_MSGS, 		jumpToSentMsgsPage);
				addEventListener(ClientEvent.JUMPTO_RECEIVED_COMMENTS, jumpToReceivedCommentsPage);
				addEventListener(ClientEvent.JUMPTO_SENT_COMMENTS, 	jumpToSentCommentsPage);
				addEventListener(ClientEvent.JUMPTO_FAVOURITES, 	jumpToFavoritesPage);
				addEventListener(ClientEvent.JUMPTO_MENTIONS, 		jumpToMentionsPage);
				
				addEventListener(ClientEvent.START_REPOST_STATUS, 	onStartRepost);
				addEventListener(ClientEvent.CANCEL_REPOST_STATUS,	onCancelRepost);
				addEventListener(ClientEvent.START_SEND_MSG, 		onStartSendMsg);
				addEventListener(ClientEvent.CANCEL_SEND_MSG, 		onCancelSendMsg);
			}
			
			private function onCreationComplete():void
			{
				expendBtn.addEventListener(MouseEvent.CLICK, onExpendBtnClick);
				jumpToHomePage(null);
				_controller.addEventListener(ClientEvent.LOAD_FRIENDS_TIMELINE_RESULT , updateTimelineList);
				_controller.addEventListener(ClientEvent.LOAD_COMMENTS_TIMELINE_RESULT, updateCommentList);
				_controller.addEventListener(ClientEvent.LOAD_DIRECT_MESSAGES_RECEIVED_RESULT , updateDirectMsgList);
				_controller.addEventListener(ClientEvent.LOAD_FOLLOWERS_INFO_RESULT   , updateFollowerList);
				_controller.addEventListener(ClientEvent.LOAD_FRIENDS_INFO_RESULT     , updateFriendList);
				_controller.addEventListener(ClientEvent.UPDATE_STATUS_SUCCESS, 		function(e:ClientEvent):void{
					if(publishArea.height > 0)
					{
						onExpendBtnClick(null);
					}
				});
			}
			
			private function onExpendBtnClick(event:MouseEvent):void
			{
				if(publishArea.height == 0)
				{
					publishArea.unfold();
					expendBtn.label = "收起发布区";
				}
				else
				{
					publishArea.fold();
					publishArea.status.text = "";
					publishArea.deleteImage();
					expendBtn.label = "展开发布区";
				}
			}
			
			private function jumpToHomePage(event:ClientEvent):void
			{
				if(event!=null){
					TabNav.selectedIndex = 0;
					return;
				}
				_controller.mainData.currentPos = "首页";
				_controller.loadFriendsTimeline();
//				mainList.itemRenderer = StatusFactory;
			}
			private function jumpToFriendsPage(event:ClientEvent):void
			{
				if(event!=null){
					TabNav.selectedIndex = 3;
					return;
				}
				_controller.mainData.currentPos = "关注列表";
				_controller.loadUserFriends(_controller.mainData.currentUser);
//				mainList.itemRenderer = FriendFactory;
			}
			private function jumpToFansPage(event:ClientEvent):void
			{
				if(event!=null){
					TabNav.selectedIndex = 4;
					return;
				}
				_controller.mainData.currentPos = "粉丝列表";
				_controller.loadUserFollowers(_controller.mainData.currentUser);
//				mainList.itemRenderer = FollowerFactory;
			}
			private function jumpToStatusPage(event:ClientEvent):void
			{
				_controller.mainData.currentPos = "微博列表";
				_controller.loadUserStatus(_controller.mainData.currentUser);
//				mainList.itemRenderer = StatusFactory;
			}
			private function jumpToReceiveMsgsPage(event:ClientEvent):void
			{
				if(event!=null){
					TabNav.selectedIndex = 1;
					return;
				}
				_controller.mainData.currentPos = "我收到的私信";
				_controller.loadReceivedDirectMsg();
//				mainList.itemRenderer = DirectMsgFactory;
			}
			private function jumpToSentMsgsPage(event:ClientEvent):void
			{
				_controller.mainData.currentPos = "我发送的私信";
				_controller.loadSentDirectMsg();
//				mainList.itemRenderer = DirectMsgFactory;
			}
			private function jumpToReceivedCommentsPage(event:ClientEvent):void
			{
				if(event!=null){
					TabNav.selectedIndex = 2;
					return;
				}
				_controller.mainData.currentPos = "我收到的评论";
				_controller.loadCommentsTimeline();
//				mainList.itemRenderer = CommentFactory;
			}
			private function jumpToSentCommentsPage(event:ClientEvent):void
			{
				_controller.mainData.currentPos = "我发出的评论";
				_controller.loadMyComments();
//				mainList.itemRenderer = CommentFactory;
			}
			
			private function jumpToFavoritesPage(event:ClientEvent):void
			{
				_controller.mainData.currentPos = "我的收藏";
				_controller.loadfavorites();
//				mainList.itemRenderer = StatusFactory;
			}
			
			private function jumpToMentionsPage(event:ClientEvent):void
			{
				_controller.mainData.currentPos = "@我的";
				_controller.loadMentions();
//				mainList.itemRenderer = StatusFactory;
			}
			
			private function updateTimelineList(e:ClientEvent):void{
				mainList.dataProvider = e.data as ArrayCollection;
			}
			private function updateCommentList(e:ClientEvent):void{
				mainListComment.dataProvider = e.data as ArrayCollection;
			}
			private function updateDirectMsgList(e:ClientEvent):void{
				mainListDirect.dataProvider = e.data as ArrayCollection;
			}
			private function updateFollowerList(e:ClientEvent):void{
				mainListFollower.dataProvider = e.data as ArrayCollection;
			}
			private function updateFriendList(e:ClientEvent):void{
				mainListFriend.dataProvider = e.data as ArrayCollection;
			}
			private function onStartRepost(event:ClientEvent):void
			{
				repostPanel.statusData = event.data as MicroBlogStatus
				popupContainer.addChild(repostPanel);
				popupContainer.visible = true;
			}
			public function onCancelRepost(event:ClientEvent):void
			{
				popupContainer.removeChild(repostPanel);
				popupContainer.visible = false;
			}
			
			public function onStartSendMsg(event:ClientEvent):void
			{
				directMsgPanel.reciverData = event.data as MicroBlogUser
				popupContainer.addChild(directMsgPanel);
				popupContainer.visible = true;
			}
			
			public function onCancelSendMsg(event:ClientEvent):void
			{
				popupContainer.removeChild(directMsgPanel);
				popupContainer.visible = false;
			}
			
			public function set controller(value:MainController):void
			{
				_controller = value;
				
				repostPanel.controller = _controller;
				directMsgPanel.controller = _controller;
			}
			
//			import com.sina.microblog.ui.mainPanel.DirectMsgPanel;
//			import com.sina.microblog.ui.mainPanel.RepostPanel;
//			import com.sina.microblog.ui.utils.Comment;
//			import com.sina.microblog.ui.utils.DirectMsg;
//			import com.sina.microblog.ui.utils.Status;
//			import com.sina.microblog.ui.utils.User;

			protected function tab_status_clickHandler(event:FlexEvent):void
			{
				jumpToHomePage(null);
			}

			protected function tab_comment_clickHandler(event:FlexEvent):void
			{
				jumpToReceivedCommentsPage(null);
			}


			protected function tab_direct_showHandler(event:FlexEvent):void
			{
				jumpToReceiveMsgsPage(null);
			}


			protected function tab_follower_showHandler(event:FlexEvent):void
			{
				jumpToFansPage(null);
			}
			protected function tab_friend_showHandler(event:FlexEvent):void
			{
				jumpToFriendsPage(null);
			}
			
			protected function labelbutton1_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest("http://www.hambao.net/air/microblog/FscaptureV6.6.rar"), "_blank");
			}
		]]>
	</mx:Script>
	<mx:VBox id="container" width="100%" y="0" 
			 height="{this.height - container.y}" verticalGap="1"
			 verticalScrollBarStyleName="vScrollerBar"
			 borderVisible="false"
			 horizontalAlign="center">
		<mx:Spacer height="10"/>
		<mainPanel:TitleBar controller="{_controller}"/>
		<mainPanel:ProfileArea id="profileArea" 
							   controller="{_controller}" 
							   shownUser="{_controller.mainData.shownUser}"
							   width="{width-10}"/>
		<mx:HRule width="100%"/>
		<mx:TabNavigator id="TabNav" width="100%" height="100%" 
						 backgroundAlpha="0"
						 borderVisible="false">
			<mx:VBox id="tab_status" label = '我的首页' show="tab_status_clickHandler(event)">
				<comps:SupperList id="mainList" width="100%" height="100%"/>
			</mx:VBox>
			<mx:VBox id="tab_direct" label = '我的私信' show="tab_direct_showHandler(event)">
				<comps:SupperListDirectMsg id="mainListDirect" width="100%" height="100%"/>
			</mx:VBox>
			<mx:VBox id="tab_comment" label = '我的评论' show="tab_comment_clickHandler(event)">
				<comps:SupperListComment id="mainListComment" width="100%" height="100%"/>
			</mx:VBox> 
			<mx:VBox id="tab_follower" label = '我关注的' show="tab_follower_showHandler(event)">
				<comps:SupperListFollower id="mainListFollower" width="100%" height="100%"/>
			</mx:VBox> 
			<mx:VBox id="tab_friend" label = '我的粉丝' show="tab_friend_showHandler(event)">
				<comps:SupperListFriend id="mainListFriend" width="100%" height="100%"/>
			</mx:VBox> 
		</mx:TabNavigator>
		
		<mx:Spacer/>
		<mx:HRule width="{width-10}"/>
		<s:VGroup width="{width-10}" horizontalAlign="right">
			<s:HGroup gap="5" verticalAlign="middle">
				<utils:LabelButton text="下载截图工具" click="labelbutton1_clickHandler(event)" toolTip="解压即可使用，热键为[PrtSc]"/>
				<mx:Button id="expendBtn" label="展开发布区" color="#000000"/>
			</s:HGroup>
			<mainPanel:PublishArea id="publishArea" controller="{_controller}"/>
		</s:VGroup>
	</mx:VBox>
	<!--mainPanel:Navigator id="navigator" width="100%" controller="{_controller}"
						 borderVisible="false"/-->
	<mx:Canvas id="popupContainer" width="100%" height="100%" visible="false"/>
</mx:Canvas>
